import { createSlice } from "@reduxjs/toolkit";

// Define a slice for managing tasks state
export const tasksSlice = createSlice({
  name: "tasks", // Unique name for the slice
  initialState: [], // Initial state of the tasks slice (an empty array)
  reducers: {
    // Reducer function to add a new task
    addTask: (state, action) => {
      state.push({ id: Date.now(), text: action.payload, completed: false }); // Add a new task object to the state array
    },
    // Reducer function to delete a task
    deleteTask: (state, action) => {
      return state.filter((task) => task.id !== action.payload); // Remove the task with the specified ID from the state array
    },
    // Reducer function to toggle the completion status of a task
    toggleTaskCompleted: (state, action) => {
      const index = state.findIndex((task) => task.id === action.payload); // Find the index of the task with the specified ID
      if (index !== -1) {
        state[index].completed = !state[index].completed; // Toggle the completion status of the task
      }
    },
  },
});

// Export action creators generated by createSlice
export const { addTask, deleteTask, toggleTaskCompleted } = tasksSlice.actions;

// Export the reducer function generated by createSlice
export default tasksSlice.reducer;
